







//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//       生成时间 2015-06-30 11:15:19 by Ye Fenglei
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using CLZ.Common;
using CLZ.Model;
using CLZ.Model.common;
using CLZ.Model.Sys;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Web;
using System.Text;

namespace CLZ.Service
{
    // 注意: 使用“重构”菜单上的“重命名”命令，可以同时更改代码和配置文件中的接口名“IService1”。
    [ServiceContract]
    public interface ICommonService
    {        
	// TODO: 在此添加您的服务操作
		#region SysSample

        public List<SysSample> getAllSysSample()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysSample.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysSample(SysSample model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysSample.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysSample getSysSampleById(Int32 Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysSample obj = db.SysSample.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysSample(SysSample model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysSample.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysSample(Int32 Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysSample obj = db.SysSample.Where(n => n.Id == id).SingleOrDefault();
                    db.SysSample.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysSample> GetSysSampleList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysSample> queryData = null;
                    queryData = db.SysSample;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region ZH_GOODS_TYPE

        public List<ZH_GOODS_TYPE> getAllZH_GOODS_TYPE()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.ZH_GOODS_TYPE.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddZH_GOODS_TYPE(ZH_GOODS_TYPE model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.ZH_GOODS_TYPE.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public ZH_GOODS_TYPE getZH_GOODS_TYPEById(Int32 ID)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    ZH_GOODS_TYPE obj = db.ZH_GOODS_TYPE.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditZH_GOODS_TYPE(ZH_GOODS_TYPE model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.ZH_GOODS_TYPE.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteZH_GOODS_TYPE(Int32 ID,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    ZH_GOODS_TYPE obj = db.ZH_GOODS_TYPE.Where(n => n.Id == id).SingleOrDefault();
                    db.ZH_GOODS_TYPE.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<ZH_GOODS_TYPE> GetZH_GOODS_TYPEList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<ZH_GOODS_TYPE> queryData = null;
                    queryData = db.ZH_GOODS_TYPE;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region test

        public List<test> getAlltest()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.test.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int Addtest(test model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.test.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public test gettestById(Int32 Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    test obj = db.test.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int Edittest(test model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.test.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int Deletetest(Int32 Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    test obj = db.test.Where(n => n.Id == id).SingleOrDefault();
                    db.test.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<test> GettestList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<test> queryData = null;
                    queryData = db.test;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region ZH_DIC_PRODUCT

        public List<ZH_DIC_PRODUCT> getAllZH_DIC_PRODUCT()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.ZH_DIC_PRODUCT.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddZH_DIC_PRODUCT(ZH_DIC_PRODUCT model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.ZH_DIC_PRODUCT.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public ZH_DIC_PRODUCT getZH_DIC_PRODUCTById(String PRODUCT_SN)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    ZH_DIC_PRODUCT obj = db.ZH_DIC_PRODUCT.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditZH_DIC_PRODUCT(ZH_DIC_PRODUCT model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.ZH_DIC_PRODUCT.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteZH_DIC_PRODUCT(String PRODUCT_SN,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    ZH_DIC_PRODUCT obj = db.ZH_DIC_PRODUCT.Where(n => n.Id == id).SingleOrDefault();
                    db.ZH_DIC_PRODUCT.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<ZH_DIC_PRODUCT> GetZH_DIC_PRODUCTList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<ZH_DIC_PRODUCT> queryData = null;
                    queryData = db.ZH_DIC_PRODUCT;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region SysModule

        public List<SysModule> getAllSysModule()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysModule.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysModule(SysModule model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysModule.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysModule getSysModuleById(String Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysModule obj = db.SysModule.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysModule(SysModule model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysModule.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysModule(String Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysModule obj = db.SysModule.Where(n => n.Id == id).SingleOrDefault();
                    db.SysModule.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysModule> GetSysModuleList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysModule> queryData = null;
                    queryData = db.SysModule;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region wx_service_points

        public List<wx_service_points> getAllwx_service_points()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.wx_service_points.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int Addwx_service_points(wx_service_points model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_service_points.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public wx_service_points getwx_service_pointsById(Int32 Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_service_points obj = db.wx_service_points.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int Editwx_service_points(wx_service_points model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_service_points.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int Deletewx_service_points(Int32 Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_service_points obj = db.wx_service_points.Where(n => n.Id == id).SingleOrDefault();
                    db.wx_service_points.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<wx_service_points> Getwx_service_pointsList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<wx_service_points> queryData = null;
                    queryData = db.wx_service_points;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region SysLog

        public List<SysLog> getAllSysLog()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysLog.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysLog(SysLog model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysLog.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysLog getSysLogById(String Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysLog obj = db.SysLog.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysLog(SysLog model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysLog.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysLog(String Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysLog obj = db.SysLog.Where(n => n.Id == id).SingleOrDefault();
                    db.SysLog.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysLog> GetSysLogList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysLog> queryData = null;
                    queryData = db.SysLog;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region SysException

        public List<SysException> getAllSysException()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysException.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysException(SysException model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysException.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysException getSysExceptionById(String Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysException obj = db.SysException.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysException(SysException model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysException.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysException(String Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysException obj = db.SysException.Where(n => n.Id == id).SingleOrDefault();
                    db.SysException.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysException> GetSysExceptionList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysException> queryData = null;
                    queryData = db.SysException;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region SysModuleOperate

        public List<SysModuleOperate> getAllSysModuleOperate()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysModuleOperate.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysModuleOperate(SysModuleOperate model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysModuleOperate.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysModuleOperate getSysModuleOperateById(String Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysModuleOperate obj = db.SysModuleOperate.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysModuleOperate(SysModuleOperate model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysModuleOperate.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysModuleOperate(String Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysModuleOperate obj = db.SysModuleOperate.Where(n => n.Id == id).SingleOrDefault();
                    db.SysModuleOperate.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysModuleOperate> GetSysModuleOperateList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysModuleOperate> queryData = null;
                    queryData = db.SysModuleOperate;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region SysRole

        public List<SysRole> getAllSysRole()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysRole.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysRole(SysRole model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysRole.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysRole getSysRoleById(String Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysRole obj = db.SysRole.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysRole(SysRole model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysRole.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysRole(String Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysRole obj = db.SysRole.Where(n => n.Id == id).SingleOrDefault();
                    db.SysRole.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysRole> GetSysRoleList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysRole> queryData = null;
                    queryData = db.SysRole;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region SysUser

        public List<SysUser> getAllSysUser()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysUser.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysUser(SysUser model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysUser.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysUser getSysUserById(String Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysUser obj = db.SysUser.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysUser(SysUser model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysUser.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysUser(String Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysUser obj = db.SysUser.Where(n => n.Id == id).SingleOrDefault();
                    db.SysUser.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysUser> GetSysUserList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysUser> queryData = null;
                    queryData = db.SysUser;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region SysRoleSysUser

        public List<SysRoleSysUser> getAllSysRoleSysUser()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysRoleSysUser.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysRoleSysUser(SysRoleSysUser model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysRoleSysUser.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysRoleSysUser getSysRoleSysUserById(String SysUserId,String SysRoleId)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysRoleSysUser obj = db.SysRoleSysUser.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysRoleSysUser(SysRoleSysUser model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysRoleSysUser.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysRoleSysUser(String SysUserId,String SysRoleId,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysRoleSysUser obj = db.SysRoleSysUser.Where(n => n.Id == id).SingleOrDefault();
                    db.SysRoleSysUser.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysRoleSysUser> GetSysRoleSysUserList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysRoleSysUser> queryData = null;
                    queryData = db.SysRoleSysUser;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region SysRight

        public List<SysRight> getAllSysRight()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysRight.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysRight(SysRight model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysRight.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysRight getSysRightById(String Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysRight obj = db.SysRight.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysRight(SysRight model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysRight.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysRight(String Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysRight obj = db.SysRight.Where(n => n.Id == id).SingleOrDefault();
                    db.SysRight.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysRight> GetSysRightList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysRight> queryData = null;
                    queryData = db.SysRight;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region SysRightOperate

        public List<SysRightOperate> getAllSysRightOperate()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.SysRightOperate.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddSysRightOperate(SysRightOperate model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysRightOperate.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public SysRightOperate getSysRightOperateById(String Id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysRightOperate obj = db.SysRightOperate.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditSysRightOperate(SysRightOperate model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.SysRightOperate.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteSysRightOperate(String Id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    SysRightOperate obj = db.SysRightOperate.Where(n => n.Id == id).SingleOrDefault();
                    db.SysRightOperate.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<SysRightOperate> GetSysRightOperateList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<SysRightOperate> queryData = null;
                    queryData = db.SysRightOperate;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region wx_product_cart

        public List<wx_product_cart> getAllwx_product_cart()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.wx_product_cart.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int Addwx_product_cart(wx_product_cart model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_product_cart.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public wx_product_cart getwx_product_cartById(Int64 id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_product_cart obj = db.wx_product_cart.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int Editwx_product_cart(wx_product_cart model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_product_cart.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int Deletewx_product_cart(Int64 id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_product_cart obj = db.wx_product_cart.Where(n => n.Id == id).SingleOrDefault();
                    db.wx_product_cart.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<wx_product_cart> Getwx_product_cartList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<wx_product_cart> queryData = null;
                    queryData = db.wx_product_cart;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region wx_product_salegoods

        public List<wx_product_salegoods> getAllwx_product_salegoods()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.wx_product_salegoods.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int Addwx_product_salegoods(wx_product_salegoods model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_product_salegoods.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public wx_product_salegoods getwx_product_salegoodsById(Int64 id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_product_salegoods obj = db.wx_product_salegoods.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int Editwx_product_salegoods(wx_product_salegoods model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_product_salegoods.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int Deletewx_product_salegoods(Int64 id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_product_salegoods obj = db.wx_product_salegoods.Where(n => n.Id == id).SingleOrDefault();
                    db.wx_product_salegoods.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<wx_product_salegoods> Getwx_product_salegoodsList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<wx_product_salegoods> queryData = null;
                    queryData = db.wx_product_salegoods;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region wx_product

        public List<wx_product> getAllwx_product()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.wx_product.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int Addwx_product(wx_product model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_product.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public wx_product getwx_productById(Int32 id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_product obj = db.wx_product.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int Editwx_product(wx_product model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_product.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int Deletewx_product(Int32 id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_product obj = db.wx_product.Where(n => n.Id == id).SingleOrDefault();
                    db.wx_product.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<wx_product> Getwx_productList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<wx_product> queryData = null;
                    queryData = db.wx_product;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region wx_product_cat

        public List<wx_product_cat> getAllwx_product_cat()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.wx_product_cat.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int Addwx_product_cat(wx_product_cat model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_product_cat.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public wx_product_cat getwx_product_catById(Int32 id)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_product_cat obj = db.wx_product_cat.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int Editwx_product_cat(wx_product_cat model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.wx_product_cat.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int Deletewx_product_cat(Int32 id,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    wx_product_cat obj = db.wx_product_cat.Where(n => n.Id == id).SingleOrDefault();
                    db.wx_product_cat.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<wx_product_cat> Getwx_product_catList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<wx_product_cat> queryData = null;
                    queryData = db.wx_product_cat;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region ZH_DAILY_GOODS_DEAL

        public List<ZH_DAILY_GOODS_DEAL> getAllZH_DAILY_GOODS_DEAL()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.ZH_DAILY_GOODS_DEAL.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddZH_DAILY_GOODS_DEAL(ZH_DAILY_GOODS_DEAL model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.ZH_DAILY_GOODS_DEAL.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public ZH_DAILY_GOODS_DEAL getZH_DAILY_GOODS_DEALById(String ID)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    ZH_DAILY_GOODS_DEAL obj = db.ZH_DAILY_GOODS_DEAL.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditZH_DAILY_GOODS_DEAL(ZH_DAILY_GOODS_DEAL model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.ZH_DAILY_GOODS_DEAL.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteZH_DAILY_GOODS_DEAL(String ID,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    ZH_DAILY_GOODS_DEAL obj = db.ZH_DAILY_GOODS_DEAL.Where(n => n.Id == id).SingleOrDefault();
                    db.ZH_DAILY_GOODS_DEAL.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<ZH_DAILY_GOODS_DEAL> GetZH_DAILY_GOODS_DEALList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<ZH_DAILY_GOODS_DEAL> queryData = null;
                    queryData = db.ZH_DAILY_GOODS_DEAL;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

		#region ZH_SETTLE_DEAL_MAIN

        public List<ZH_SETTLE_DEAL_MAIN> getAllZH_SETTLE_DEAL_MAIN()
        {
            try
            {
                DBContainer db = new DBContainer();
                return db.ZH_SETTLE_DEAL_MAIN.ToList();
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }


        public int AddZH_SETTLE_DEAL_MAIN(ZH_SETTLE_DEAL_MAIN model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.ZH_SETTLE_DEAL_MAIN.Add(model);
                    db.Entry(model).State = EntityState.Added;
                    return (db.SaveChanges());
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }

        }


        public ZH_SETTLE_DEAL_MAIN getZH_SETTLE_DEAL_MAINById(Int64 ID)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    ZH_SETTLE_DEAL_MAIN obj = db.ZH_SETTLE_DEAL_MAIN.Where(n => n.Id == id).SingleOrDefault();
                    return obj;
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }

        public int EditZH_SETTLE_DEAL_MAIN(ZH_SETTLE_DEAL_MAIN model,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    db.ZH_SETTLE_DEAL_MAIN.Attach(model);
                    db.Entry(model).State = EntityState.Modified;
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                error.ErrorMessage = ex.Message;
                return 0;
            }
            

        }

        public int DeleteZH_SETTLE_DEAL_MAIN(Int64 ID,ref ValidationError error)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    ZH_SETTLE_DEAL_MAIN obj = db.ZH_SETTLE_DEAL_MAIN.Where(n => n.Id == id).SingleOrDefault();
                    db.ZH_SETTLE_DEAL_MAIN.Remove(obj);
                    return db.SaveChanges();
                }
            }
            catch (Exception ex)
            {
                error.ErrorMessage = ex.Message;
                ExceptionHelper.WriteException(ex);
                return 0;
            }

        }

        
        

        /// <summary>
        /// 获取分页数据
        /// </summary>
        /// <param name="pager"></param>
        /// <returns></returns>
        public List<ZH_SETTLE_DEAL_MAIN> GetZH_SETTLE_DEAL_MAINList(ref GridPager pager)
        {
            try
            {
                using (DBContainer db = new DBContainer())
                {
                    IQueryable<ZH_SETTLE_DEAL_MAIN> queryData = null;
                    queryData = db.ZH_SETTLE_DEAL_MAIN;
                    int total = queryData.Count();
                    pager.totalRows = total;
                    queryData = LinqHelper.SortingAndPaging(queryData, pager.sort, pager.order, pager.page, pager.rows);
                    return queryData.ToList();
                }
            }
            catch (Exception ex)
            {
                ExceptionHelper.WriteException(ex);
                return null;
            }

        }
        #endregion

	}
}